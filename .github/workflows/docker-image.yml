name: CI/CD for nodejs app

on:
  push:
    branches: [ "master" ]

permissions:
  contents: write

# Define the jobs to be executed
jobs:
  # Build job
  Build:
    # Use the latest Ubuntu runner
    runs-on: ubuntu-latest
    # Steps to be executed in the Build job
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
      # Login to DockerHub using secrets for credentials
      - name: Login to DockerHub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      # Build Docker image with a specific tag
      - name: Build Docker Image
        env:
          DB_URL: ${{ secrets.DB_URL }}
        run: DOCKER_BUILDKIT=1 docker build --build-arg DB_URL=$DB_URL -t cjScrypt/lightening_trade_bot .
      # Push the built image to DockerHub
      - name: Push to DockerHub
        run: docker push cjscrypt/lightening_trade_bot:latest 
  # Deploy job
  Deploy:
    # Use a self-hosted runner for deployment
    runs-on: self-hosted
    # Steps to be executed in the Deploy job
    steps:
      - name: Create .env file
        run: echo "${{ secrets.PROD_ENV_FILE }}" > .env
      # Pull the latest Docker image from DockerHub
      - name: Pull the Docker Image
        run: docker pull cjscrypt/lightening_trade_bot:latest 
      # Delete the old container if it exists
      - name: Delete Old Container
        run: |
          if [ "$(docker ps -q -f name=lightening_trade_bot-Container)" ]; then
            sudo docker rm -f lightening_trade_bot-Container
          fi
      # Run a new container from the pulled image
      - name: Run the Container
        run: docker run --env-file .env -d -p 3000:3000 --name lightening_trade_bot-Container cjScrypt/lightening_trade_bot
      # Remove created .env file after running container
      - name: Clean .env file
        run: rm .env
